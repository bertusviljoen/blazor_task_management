@page "/chatbot"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject NavigationManager Nav

<div class="floating-pane">
    <a @onclick="Close" class="hide-chatbot" title="Close .NET Concierge"><span>✖</span></a>

    <div class="chatbot-chat">
        @if (chatState is null)
        {
            <div class="chatbot-message">
                <div class="chatbot-message-content">
                    <p>Connecting...</p>
                </div>
            </div>
        }
        else
        {
            @foreach (var message in chatState.Messages)
            {
                <div class="chatbot-message @(message.IsUser ? "user" : "bot")">
                    <div class="chatbot-message-content">
                        <p>@message.Text</p>
                    </div>
                </div>
            }
        }
        <div class="chatbot-message">
            <div class="chatbot-message-content">
                <form class="chatbot-input" @onsubmit="SendMessage">
                    <input type="text" @bind="currentMessage" placeholder="Type your message..." />
                    <button type="submit" title="Send" disabled="@(chatState is null)">Send</button>
                </form>
            </div>
        </div>
    </div>
</div>

@code {
    private InternalChatState chatState = new();
    private string currentMessage = "";

    [CascadingParameter]
    public EventCallback OnClose { get; set; }

    protected override void OnInitialized()
    {
        chatState.Messages = new List<ChatMessage>
{
new ChatMessage { Text = "Hello! How can I help you today?", IsUser = false }
};
    }

    private async Task Close()
    {
        await OnClose.InvokeAsync();
    }

    private async Task SendMessage()
    {
        if (string.IsNullOrWhiteSpace(currentMessage))
            return;

        chatState.Messages.Add(new ChatMessage { Text = currentMessage, IsUser = true });
        currentMessage = "";
        StateHasChanged();
    }

    public class InternalChatState
    {
        public List<ChatMessage> Messages { get; set; }
    }

    public class ChatMessage
    {
        public string Text { get; set; }
        public bool IsUser { get; set; }
    }
}